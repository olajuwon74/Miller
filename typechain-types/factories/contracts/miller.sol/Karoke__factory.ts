/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Karoke,
  KarokeInterface,
} from "../../../contracts/miller.sol/Karoke";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "staDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endingDate",
        type: "uint256",
      },
    ],
    name: "SessionIsOn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "TotalApplicants",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressAdded",
    outputs: [
      {
        internalType: "address",
        name: "singerAdress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "added",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressSelected",
    outputs: [
      {
        internalType: "address",
        name: "secAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "chosen",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_select",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_select2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_select3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_select4",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_select5",
        type: "uint256",
      },
    ],
    name: "finalist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "indicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Karoke.Status",
        name: "_status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "sDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eDate",
        type: "uint256",
      },
    ],
    name: "startSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upload",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewTotalApplicants",
    outputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526107d0600355600160065560016007553480156200002157600080fd5b50604051620015cf380380620015cf8339818101604052810190620000479190620000cc565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816001819055508060028190555050505062000194565b600081519050620000af8162000160565b92915050565b600081519050620000c6816200017a565b92915050565b600080600060608486031215620000e257600080fd5b6000620000f2868287016200009e565b93505060206200010586828701620000b5565b92505060406200011886828701620000b5565b9150509250925092565b60006200012f8262000136565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200016b8162000122565b81146200017757600080fd5b50565b620001858162000156565b81146200019157600080fd5b50565b61142b80620001a46000396000f3fe60806040526004361061009b5760003560e01c80639eb5e676116100645780639eb5e67614610165578063b39b7997146101a6578063b69ef8a8146101e4578063d2b584921461020f578063f3443d581461023a578063f3fef3a3146102515761009b565b806272d7b5146100a05780632986c0e5146100de5780633f749da51461010957806347202d5c146101135780638b6fc4521461013c575b600080fd5b3480156100ac57600080fd5b506100c760048036038101906100c2919061100c565b61027a565b6040516100d59291906111da565b60405180910390f35b3480156100ea57600080fd5b506100f36102cb565b6040516101009190611223565b60405180910390f35b6101116102d1565b005b34801561011f57600080fd5b5061013a60048036038101906101359190611071565b61037e565b005b34801561014857600080fd5b50610163600480360381019061015e9190611035565b61050d565b005b34801561017157600080fd5b5061018c600480360381019061018791906110c0565b610558565b60405161019d959493929190611187565b60405180910390f35b3480156101b257600080fd5b506101cd60048036038101906101c8919061100c565b610d13565b6040516101db9291906111da565b60405180910390f35b3480156101f057600080fd5b506101f9610d64565b6040516102069190611223565b60405180910390f35b34801561021b57600080fd5b50610224610d6a565b6040516102319190611223565b60405180910390f35b34801561024657600080fd5b5061024f610db2565b005b34801561025d57600080fd5b5061027860048036038101906102739190611035565b610ef4565b005b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b60065481565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16610354577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60035434101561036357600080fd5b34600460008282546103759190611278565b92505081905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390611203565b60405180910390fd5b60006001811115610446577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b83600181111561047f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610503578181116104bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600154915060025490507fd5e778d847f84a4208523ddc9511ae040e17457e18201ed75ca70a5897a6afd282826040516104f692919061123e565b60405180910390a1610508565b600080fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610553573d6000803e3d6000fd5b505050565b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e590611203565b60405180910390fd5b60006009600060058d8154811061062e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060058b815481106106d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160000160146101000a81548160ff0219169083151502179055506007600081548092919061077290611316565b919050555060058a815481106107b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160000160146101000a81548160ff0219169083151502179055506007600081548092919061085190611316565b919050555060058981548110610890577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160000160146101000a81548160ff0219169083151502179055506007600081548092919061093090611316565b91905055506005888154811061096f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160000160146101000a81548160ff02191690831515021790555060076000815480929190610a0f90611316565b919050555060058781548110610a4e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160000160146101000a81548160ff02191690831515021790555060076000815480929190610aee90611316565b919050555060058b81548110610b2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058b81548110610b95577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058b81548110610bfd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058b81548110610c65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058b81548110610ccd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1695509550955095509550509550955095509550959050565b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b60045481565b6000806006819055507ff89c2ff0b9cdeb3663fb47edd5be4061d5e2a0a2b3c6f4faac37e5b11788f7bc81604051610da29190611223565b60405180910390a1600654905090565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1615610e36577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160000160146101000a81548160ff02191690831515021790555060066000815480929190610eec90611316565b919050555050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7990611203565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610fc8573d6000803e3d6000fd5b505050565b600081359050610fdc816113b7565b92915050565b600081359050610ff1816113ce565b92915050565b600081359050611006816113de565b92915050565b60006020828403121561101e57600080fd5b600061102c84828501610fcd565b91505092915050565b6000806040838503121561104857600080fd5b600061105685828601610fcd565b925050602061106785828601610ff7565b9150509250929050565b60008060006060848603121561108657600080fd5b600061109486828701610fe2565b93505060206110a586828701610ff7565b92505060406110b686828701610ff7565b9150509250925092565b600080600080600060a086880312156110d857600080fd5b60006110e688828901610ff7565b95505060206110f788828901610ff7565b945050604061110888828901610ff7565b935050606061111988828901610ff7565b925050608061112a88828901610ff7565b9150509295509295909350565b611140816112ce565b82525050565b61114f816112e0565b82525050565b6000611162600b83611267565b915061116d8261138e565b602082019050919050565b6111818161130c565b82525050565b600060a08201905061119c6000830188611137565b6111a96020830187611137565b6111b66040830186611137565b6111c36060830185611137565b6111d06080830184611137565b9695505050505050565b60006040820190506111ef6000830185611137565b6111fc6020830184611146565b9392505050565b6000602082019050818103600083015261121c81611155565b9050919050565b60006020820190506112386000830184611178565b92915050565b60006040820190506112536000830185611178565b6112606020830184611178565b9392505050565b600082825260208201905092915050565b60006112838261130c565b915061128e8361130c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112c3576112c261135f565b5b828201905092915050565b60006112d9826112ec565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113218261130c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113545761135361135f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e6f7420416c6c6f776564000000000000000000000000000000000000000000600082015250565b6113c0816112ce565b81146113cb57600080fd5b50565b600281106113db57600080fd5b50565b6113e78161130c565b81146113f257600080fd5b5056fea2646970667358221220087df6a12ddc024340072a3c5e427e8fd16860ef5120e017703e68ed1cf4294264736f6c63430008040033";

type KarokeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KarokeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Karoke__factory extends ContractFactory {
  constructor(...args: KarokeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: string,
    _startDate: BigNumberish,
    _endDate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Karoke> {
    return super.deploy(
      _owner,
      _startDate,
      _endDate,
      overrides || {}
    ) as Promise<Karoke>;
  }
  override getDeployTransaction(
    _owner: string,
    _startDate: BigNumberish,
    _endDate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _startDate,
      _endDate,
      overrides || {}
    );
  }
  override attach(address: string): Karoke {
    return super.attach(address) as Karoke;
  }
  override connect(signer: Signer): Karoke__factory {
    return super.connect(signer) as Karoke__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KarokeInterface {
    return new utils.Interface(_abi) as KarokeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Karoke {
    return new Contract(address, _abi, signerOrProvider) as Karoke;
  }
}
